/**
 * Maven publishing configuration
 * */

// Maven pom.xml attributes
ext {
    libraryName = 'Testerra TeamCity Connector'
    packagingType = 'jar'
    libraryDescription = "Testerra test automation framework - ${project.getName()} module"

    siteUrl = 'https://testerra.io'
    gitUrl = 'scm:git:git://github.com/telekom/testerra-teamcity-connector.git'
    gitHttpsUrl = 'https://github.com/telekom/testerra-teamcity-connector/'

    developerId = 'MMS'
    developerName = 'Testerra Team MMS'
    developerEmail = 'testerra@telekom-mms.com'
    developerOrganization = 'Deutsche Telekom MMS GmbH'
    developerOrganizationUrl = 'https://www.telekom-mms.com/'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}


javadoc {
    // Support JDK 8 annotations
    options.tags = [
            "implNote:a:Implementation Note:",
            "apiNote:a:API Note:",
            "implSpec:a:Implementation Requirements:"
    ]
    // Prevent errors during generation
    options.addStringOption('Xdoclint:none', '-quiet')
}

//    task sourcesJar(type: Jar, dependsOn: classes) {
//        archiveClassifier.set('sources')
//        from sourceSets.main.allSource
//    }

//    task javadocJar(type: Jar) {
//        archiveClassifier.set('javadoc')
//        from javadoc
//    }

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishOnCentral {
    repoOwner.set("martingrossmann") // Used to populate the default value for projectUrl and scmConnection
    projectDescription.set(rootProject.ext.libraryDescription)

    projectLongName.set(project.name)
    licenseName.set(rootProject.ext.licenseName)
    licenseUrl.set(rootProject.ext.licenseUrl)
    projectUrl.set(rootProject.ext.gitHttpsUrl)
    scmConnection.set(rootProject.ext.gitUrl)

    /*
 * The plugin is pre-configured to fetch credentials for Maven Central from the context in the following order:
 * 1. Environment variables MAVEN_CENTRAL_USERNAME and MAVEN_CENTRAL_PASSWORD
 * 2. Project properties mavenCentralUsername and mavenCentralPassword
 * 3. Project properties sonatypeUsername and sonatypePassword
 * 4. Project properties ossrhUsername and ossrhPassword
 *
 * They can be further customized through values or providers:
 */
//        mavenCentral.user.set("...")
//        mavenCentral.password.set(provider { "..." })

//    if (project.version.endsWith("-SNAPSHOT")) {
//        repository("https://central.sonatype.com/repository/maven-snapshots/", "Snapshots") {
//            user.set(System.getProperty("MAVEN_CENTRAL_PORTAL_USERNAME", "none"))
//            password.set(System.getProperty("MAVEN_CENTRAL_PORTAL_PASSWORD", "none"))
//        }
//    }
}

publishing {

    publications {
        mavenJava(MavenPublication) {
            from components.java

            // Custom pom
            pom {

                name = rootProject.ext.libraryName
                description = rootProject.ext.libraryDescription
                url = rootProject.ext.siteUrl

                licenses {
                    license {
                        name = rootProject.ext.licenseName
                        url = rootProject.ext.licenseUrl
                    }
                }

                developers {
                    developer {
                        id = rootProject.ext.developerId
                        name = rootProject.ext.developerName
                        email = rootProject.ext.developerEmail
                        organization = rootProject.ext.developerOrganization
                        organizationUrl = rootProject.ext.developerOrganizationUrl
                    }
                }

                scm {
                    connection = rootProject.ext.gitUrl
                    developerConnection = rootProject.ext.gitUrl
                    url = rootProject.ext.gitHttpsUrl
                }
            }
        }
    }
    if (project.version.endsWith("-SNAPSHOT")) {
        repositories {
            maven {
                url "https://central.sonatype.com/repository/maven-snapshots/"
                credentials {
                    username System.getProperty("mavenCentralPortalUsername", "none")
                    password System.getProperty("mavenCentralPortalPassword", "none")
                }
            }
        }
    }
//        repositories {
//            maven {
//                url "https://central.sonatype.com/repository/maven-snapshots/"
//                credentials {
//                    username System.getProperty("MAVEN_CENTRAL_PORTAL_USERNAME", "none")
//                    password System.getProperty("MAVEN_CENTRAL_PORTAL_PASSWORD", "none")
//                }
//            }
//        }

//    if (!project.version.endsWith("-SNAPSHOT")) {
    signing {
        sign publishing.publications.mavenJava
    }

}

